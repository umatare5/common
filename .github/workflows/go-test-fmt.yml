name: Reusable Go Format and Lint Workflow

on:
  workflow_call:
    inputs:
      go_version:
        description: "Go version to use"
        required: false
        type: string
        default: "1.24.5"
      golangci_lint_version:
        description: "golangci-lint version to use"
        required: false
        type: string
        default: "v1.64.8"
      golangci_lint_config:
        description: "golangci-lint config file path"
        required: false
        type: string
        default: ".golangci.yml"
      runs_on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "ubuntu-24.04"
      fetch_depth:
        description: "Number of commits to fetch (0 = all history)"
        required: false
        type: number
        default: 1
      timeout:
        description: "Timeout for golangci-lint execution"
        required: false
        type: string
        default: "5m"
      golangci_lint_args:
        description: "Additional arguments for golangci-lint"
        required: false
        type: string
        default: "--verbose --print-resources-usage"
      enable_cache:
        description: "Enable golangci-lint cache"
        required: false
        type: boolean
        default: true
      cache_key_suffix:
        description: "Additional suffix for cache key"
        required: false
        type: string
        default: ""

jobs:
  fmt:
    name: Run Go Format and Lint
    runs-on: ${{ inputs.runs_on }}

    steps:
      # Checkout the code repository to access source files
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: ${{ inputs.fetch_depth }}

      # Set up Go development environment with specified version
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ inputs.go_version }}

      # Cache golangci-lint binary and dependencies for faster subsequent runs
      - name: Cache golangci-lint
        if: ${{ inputs.enable_cache }}
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/golangci-lint
          key: golangci-lint-${{ runner.os }}-${{ hashFiles(inputs.golangci_lint_config) }}${{ inputs.cache_key_suffix }}
          restore-keys: |
            golangci-lint-${{ runner.os }}-

      # Download and install golangci-lint binary with specified version
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
            sh -s -- -b "$(go env GOPATH)/bin" ${{ inputs.golangci_lint_version }}

      # Clean Go module cache and verify dependencies for consistent builds
      - name: Clean Go cache and modules
        run: |
          go mod tidy
          go mod verify

      # Execute golangci-lint with configuration file and custom arguments
      - name: Run golangci-lint
        run: |
          if [ ! -f "${{ inputs.golangci_lint_config }}" ]; then
            golangci-lint run --timeout ${{ inputs.timeout }} ${{ inputs.golangci_lint_args }}
            exit 1
          fi
          golangci-lint run --config ${{ inputs.golangci_lint_config }} --timeout ${{ inputs.timeout }} ${{ inputs.golangci_lint_args }}
