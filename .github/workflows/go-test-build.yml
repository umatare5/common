name: Reusable Go Test and Build Workflow

# Required permissions for calling workflow:
# permissions:
#   contents: read        # For checking out code
#   pull-requests: write  # For writing PR comments (if needed)

on:
  workflow_call:
    inputs:
      go_version:
        description: "Go version to use"
        required: false
        type: string
        default: "1.24.5"
      runs_on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "ubuntu-24.04"
      fetch_depth:
        description: "Number of commits to fetch (0 = all history)"
        required: false
        type: number
        default: 1
      build_cmd_path:
        description: "Path to the command to build (relative to repo root)"
        required: false
        type: string
        default: "./cmd"
      build_output_path:
        description: "Output path for the built binary"
        required: false
        type: string
        default: "./tmp/app"
      test_packages:
        description: "Test packages pattern"
        required: false
        type: string
        default: "./..."
      gotestsum_format:
        description: "gotestsum output format"
        required: false
        type: string
        default: "testname"
      enable_race_detection:
        description: "Enable race detection in tests"
        required: false
        type: boolean
        default: true
      skip_build:
        description: "Skip binary build and verification steps (useful for libraries)"
        required: false
        type: boolean
        default: false

jobs:
  test:
    name: Test and Build
    runs-on: ${{ inputs.runs_on }}

    steps:
      # Checkout the code repository to access source files and dependencies
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: ${{ inputs.fetch_depth }}

      # Set up Go development environment with caching enabled for dependencies
      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ inputs.go_version }}
          cache: true

      # Clean and verify Go module dependencies for consistent builds
      - name: Verify dependencies
        run: |
          go mod tidy
          go mod verify

      # Run static analysis tool to detect potential issues in Go code
      - name: Run go vet
        run: go vet ${{ inputs.test_packages }}

      # Install gotestsum for enhanced test output formatting and reporting
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      # Execute unit tests with optional race detection for concurrent code safety
      - name: Run tests
        run: |
          if [ "${{ inputs.enable_race_detection }}" = "true" ]; then
            gotestsum --format ${{ inputs.gotestsum_format }} -- -race ${{ inputs.test_packages }}
          else
            gotestsum --format ${{ inputs.gotestsum_format }} -- ${{ inputs.test_packages }}
          fi

      # Compile the Go application into an executable binary
      - name: Build binary
        if: ${{ !inputs.skip_build }}
        run: go build -o ${{ inputs.build_output_path }} ${{ inputs.build_cmd_path }}

      # Verify the built binary supports version flag and displays version information
      - name: Verify binary version
        if: ${{ !inputs.skip_build }}
        run: ${{ inputs.build_output_path }} --version

      # Verify the built binary supports help flag and displays usage information
      - name: Verify binary help
        if: ${{ !inputs.skip_build }}
        run: ${{ inputs.build_output_path }} --help
