name: Reusable Go Release Workflow

# Required permissions for calling workflow:
# permissions:
#   contents: write      # For creating releases
#   packages: write      # For pushing to ghcr.io
#   id-token: write      # For OIDC authentication

on:
  workflow_call:
    inputs:
      go_version:
        description: "Go version to use"
        required: false
        type: string
        default: "1.24.5"
      goreleaser_version:
        description: "GoReleaser version to use"
        required: false
        type: string
        default: "latest"
      goreleaser_args:
        description: "GoReleaser arguments"
        required: false
        type: string
        default: "release --clean"
      runs_on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "ubuntu-24.04"
      fetch_depth:
        description: "Number of commits to fetch (0 = all history)"
        required: false
        type: number
        default: 0
      enable_docker:
        description: "Enable Docker Buildx setup"
        required: false
        type: boolean
        default: true
      registry:
        description: "Container registry to use"
        required: false
        type: string
        default: "ghcr.io"
      goreleaser_distribution:
        description: "GoReleaser distribution"
        required: false
        type: string
        default: "goreleaser"

jobs:
  release:
    name: Go Release
    runs-on: ${{ inputs.runs_on }}
    steps:
      # Checkout the code repository with full git history for release tagging
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: ${{ inputs.fetch_depth }}

      # Set up Go development environment for building release binaries
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ inputs.go_version }}

      # Set up Docker Buildx for multi-platform container image builds
      - name: Set up Docker Buildx
        if: ${{ inputs.enable_docker }}
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      # Authenticate with container registry for pushing Docker images
      - name: Login to Container Registry
        if: ${{ inputs.enable_docker }}
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Execute GoReleaser to build, package, and publish release artifacts
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: ${{ inputs.goreleaser_distribution }}
          version: ${{ inputs.goreleaser_version }}
          args: ${{ inputs.goreleaser_args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
