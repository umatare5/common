name: Reusable golangci-lint Workflow

on:
  workflow_call:
    inputs:
      go_version:
        description: "Go version to use"
        required: false
        type: string
        default: "1.24.5"
      golangci_lint_version:
        description: "golangci-lint version to use"
        required: false
        type: string
        default: "v1.64.8"
      golangci_lint_config:
        description: "golangci-lint config file path"
        required: false
        type: string
        default: ".golangci.yml"

jobs:
  lint:
    name: Run golangci-lint
    runs-on: ubuntu-24.04

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ inputs.go_version }}

      # Cache golangci-lint binary for faster execution
      - name: Cache golangci-lint
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/golangci-lint
          key: golangci-lint-${{ runner.os }}-${{ hashFiles(inputs.golangci_lint_config) }}
          restore-keys: |
            golangci-lint-${{ runner.os }}-

      # Install golangci-lint
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
            sh -s -- -b "$(go env GOPATH)/bin" ${{ inputs.golangci_lint_version }}

      # Clean and setup Go modules aggressively
      - name: Clean Go cache and modules
        run: |
          go mod tidy
          go mod verify

      # Run golangci-lint
      - name: Run golangci-lint
        run: |
          if [ ! -f "${{ inputs.golangci_lint_config }}" ]; then
            golangci-lint run --timeout 5m --verbose --print-resources-usage
            exit 1
          fi
          golangci-lint run --config ${{ inputs.golangci_lint_config }} --timeout 5m --verbose --print-resources-usage
