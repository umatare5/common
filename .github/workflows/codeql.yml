name: Reusable CodeQL Analysis Workflow

# Required permissions for calling workflow:
# permissions:
#   security-events: write  # Required for all workflows
#   packages: read          # Required to fetch internal or private CodeQL packs
#   actions: read           # Only required for workflows in private repositories
#   contents: read          # Only required for workflows in private repositories

on:
  workflow_call:
    inputs:
      languages:
        description: "Languages to analyze (comma-separated: actions,go,javascript-typescript,python,etc.)"
        required: false
        type: string
        default: "actions,go"
      runs_on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "ubuntu-latest"
      fetch_depth:
        description: "Number of commits to fetch (0 = all history)"
        required: false
        type: number
        default: 1
      codeql_queries:
        description: "Custom CodeQL queries (e.g., security-extended,security-and-quality)"
        required: false
        type: string
        default: ""
      build_commands:
        description: "Custom build commands for manual build mode (multiline string)"
        required: false
        type: string
        default: ""

jobs:
  prepare:
    name: Prepare Analysis Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          # Parse languages input and create matrix
          languages="${{ inputs.languages }}"
          matrix_include="["

          IFS=',' read -ra LANG_ARRAY <<< "$languages"
          first=true
          for lang in "${LANG_ARRAY[@]}"; do
            lang=$(echo "$lang" | xargs)  # trim whitespace
            if [ "$first" = true ]; then
              first=false
            else
              matrix_include+=","
            fi

            # Set build mode based on language
            case "$lang" in
              "actions"|"javascript-typescript"|"python"|"ruby")
                build_mode="none"
                ;;
              "go"|"java-kotlin"|"csharp"|"rust")
                build_mode="autobuild"
                ;;
              "c-cpp"|"swift")
                build_mode="manual"
                ;;
              *)
                build_mode="autobuild"
                ;;
            esac

            matrix_include+="{\"language\":\"$lang\",\"build-mode\":\"$build_mode\"}"
          done

          matrix_include+="]"
          echo "matrix={\"include\":$matrix_include}" >> $GITHUB_OUTPUT

  analyze:
    name: Analyze (${{ matrix.language }})
    needs: prepare
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || inputs.runs_on }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        ${{ fromJSON(needs.prepare.outputs.matrix) }}
        # CodeQL supports the following values keywords for 'language': 'actions', 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'rust', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: ${{ inputs.fetch_depth }}

      # Add any setup steps before running the `github/codeql-action/init` action.
      # This includes steps like installing compilers or runtimes (`actions/setup-node`
      # or others). This is typically only required for manual builds.
      # - name: Setup runtime (example)
      #   uses: actions/setup-example@v1

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@ea9e4e37992a54ee68a9622e985e60c8e8f12d9f # v3.27.4
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          queries: ${{ inputs.codeql_queries }}

      # If the analyze step fails for one of the languages you are analyzing with
      # "We were unable to automatically build your code", modify the matrix above
      # to set the build mode to "manual" for that language. Then modify this step
      # to build your code.
      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
      - if: matrix.build-mode == 'manual'
        name: Manual build
        shell: bash
        run: |
          if [ -n "${{ inputs.build_commands }}" ]; then
            echo "Running custom build commands..."
            ${{ inputs.build_commands }}
          else
            echo 'If you are using a "manual" build mode for one or more of the' \
              'languages you are analyzing, replace this with the commands to build' \
              'your code, for example:'
            echo '  make bootstrap'
            echo '  make release'
            exit 1
          fi

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@ea9e4e37992a54ee68a9622e985e60c8e8f12d9f # v3.27.4
        with:
          category: "/language:${{matrix.language}}"
